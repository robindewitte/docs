---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: fictivusforum
    tier: frontend
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 80
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: fictivusforum
      tier: frontend
      track: stable
  replicas: 1
  template:
    metadata:
      labels:
        app: fictivusforum
        tier: frontend
        track: stable
    spec:
      containers:
        - name: nginx
          image: "robindewitte/fictivusfrontend:fictivusfrontend0.7"
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx","-s","quit"]
...
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
spec:
  selector:
    matchLabels:
      app: gateway-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: gateway-pod
    spec:
      containers:
        - name: gateway
          image: ghcr.io/robindewitte/gameforum-api-gateway:docker
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5001
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://+:5001           
--- 
apiVersion: v1
kind: Service
metadata:
    name: gateway
spec:
    ports:
    - port: 5001
      protocol: TCP
      targetPort: 5001
    selector:
        app: gateway-pod
    type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: gateway
spec:
    rules:
    - http:
        paths:
        - path: /gateway
          pathType: Prefix
          backend:
            service:
              name: gateway
              port:
                number: 5001
---                
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-deployment
spec:
  selector:
    matchLabels:
      app: account-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: account-pod
    spec:
      containers:
        - name: account-container
          image: ghcr.io/robindewitte/gameforum-accountservice:docker
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5004
              protocol: TCP           
--- 
apiVersion: v1
kind: Service
metadata:
    name: account-service
spec:
    ports:
    - port: 5004
      protocol: TCP
      targetPort: 5004
    selector:
        app: account-pod
    type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: account-ingress
spec:
    rules:
    - http:
        paths:
        - path: /account
          pathType: Prefix
          backend:
            service:
              name: account-service
              port:
                number: 5004
---                
apiVersion: apps/v1
kind: Deployment
metadata:
  name: write-deployment
spec:
  selector:
    matchLabels:
      app: write-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: write-pod
    spec:
      containers:
        - name: write-container
          image: ghcr.io/robindewitte/gameforum-topic-write:docker
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
              protocol: TCP           
--- 
apiVersion: v1
kind: Service
metadata:
    name: write-service
spec:
    ports:
    - port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
        app: write-pod
    type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: write-ingress
spec:
    rules:
    - http:
        paths:
        - path: /write
          pathType: Prefix
          backend:
            service:
              name: write-service
              port:
                number: 5000      
---                
apiVersion: apps/v1
kind: Deployment
metadata:
  name: topic-deployment
spec:
  selector:
    matchLabels:
      app: topic-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: topic-pod
    spec:
      containers:
        - name: topic-container
          image: ghcr.io/robindewitte/fictivus_topicservice:docker
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5003
              protocol: TCP           
--- 
apiVersion: v1
kind: Service
metadata:
    name: topic-service
spec:
    ports:
    - port: 5003
      protocol: TCP
      targetPort: 5003
    selector:
        app: topic-pod
    type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: topic-ingress
spec:
    rules:
    - http:
        paths:
        - path: /topic
          pathType: Prefix
          backend:
            service:
              name: topic-service
              port:
                number: 5003                  
